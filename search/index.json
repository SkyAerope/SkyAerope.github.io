[{"content":"系统的选择 （网页后台可以跳过本段）关于系统的选择，Linux 类系统（Centos、Redhat 等）固然高效、稳定，但选择系统也一定要考虑到自己的熟悉程度和学习能力。不要盲目为了高效而选择一个自己完全不熟悉甚至从未使用过的系统，一旦出现了突发情况，原本只需要几分钟解决的问题由于不熟悉系统的操作用几个小时来解决，这样真的合适么？在内存足够使用的情况下，Windows 和 Linux 开服的性能差距几乎可以忽略。但是如果你熟悉 Linux 的操作，我依然会推荐你使用 Linux 系统，毕竟大服需要的 Mysql、Redis 在 Linux 下的性能往往高过 Windows 不少。如果你有较强的学习能力，打算入坑 Linux 开服，我会推荐你使用 Centos6.6（稳定性突出、可靠性不俗、大量教程和文档）。\nJVM 版本的选择 （网页后台可以跳过本段）JVM（Java Virtual Machine）也就是 Java 虚拟机，俗称 Java 运行环境。关于选择 JRE 还是 JDK 的选择，我推荐使用 JDK，JDK 包括运行环境（JRE），在此基础上增加了一些性能调优工具如 VisualVM。而 JVM 的版本，非常不推荐使用 Java6，因为有不少插件已经放弃了 Java6 的支持。Java7 和 Java8 则是不错的选择，如果不是模组服务器，推荐使用 Java8，Java8 相比 Java7 主要的性能提升便在于 HashMap 上，而无论 Minecraft 服务端本身还是插件都大量使用了 HashMap。所以对于 Minecraft 服务器来说，使用 Java8 带来的性能提升还是比较可观的。\n服务端的选择 从服务端的选择开始就注定了性能优劣的起步水平，现在依然有不少人认为 CraftBukkit（水桶服）的兼容性、稳定性要远远好于 Spigot（水龙头）。然而这是一个误区，Spigot 是在 CraftBukkit 基础上优化而来的，几乎 100% 兼容原有的插件 API，所以可以认为只要同版本水桶服能用的插件就可以在 Spigot 上运行。如果你选择使用 1.7.10 以下的版本开服（纯净服），强烈推荐你使用 Spigot 服务端，Spigot 相比水桶服拥有近百项的优化，例如异步加载、读取区块，限制实体的活动范围，修复一些内存泄露的问题等等。所以同版本下可以很容易感受到 Spigot 有着更出色的性能和更低的内存占用。如果你开服的版本在 1.8+，我会推荐你使用 PaperSpigot 服务端，这款服务端是在 Spigot 基础上优化而来的，相比 Spigot 有着显著的性能提升（Tiles 几乎不再消耗 CPU 时间，爆炸算法优化，红石不再卡服，流水算法优化，区块压缩节约内存，优化 Spigot 自带的 Anti X-ray 等等），并且有许多可自定义项目（船损坏依然掉落船，各种地形生成的开关等等）。在最后需要提醒的是，如果没有特殊原因，建议使用最新版本的服务端，最新版本的服务端往往修复了目前已知的绝大多数 BUG 和有着更多的性能提升。例如目前的 1.8.8 版本就比 1.8.7 多修复了数个可以卡服、蹦服的 BUG（利用旗帜样式堆叠卡服等）。\n启动脚本 （网页后台可以跳过本段）越多的启动参数反而导致越多的性能损耗。在不了解 JVM 工作原理的情况下，不要随随便便增加一大堆无用的启动参数。一般情况下指定最小内存、最大内存即可，Java7 还需要指定一个大于等于 128MB 的 MaxPermSize。GC 回收模式等等参数都应该由 JVM 自动选择，例如国外论坛流传的使用 G1GC 可以优化 MC 性能，的确，G1GC 减少了 Full GC 的时间，但是会额外增加 10%~30% 的 CPU 时间占用，完全得不偿失。还有流传很广的设置 MaxGCPauseMillis 参数。这个参数的含义是控制 GC 垃圾回收的最大时间。设置一个很小的数值的确从表面来看服务器没有瞬卡的问题了，但是这样会导致每次垃圾回收都不够深入和全面，这样的结果就是服务端运行时间越久越卡，而且很可能出现 OOM（内存不够了）直接蹦服。 前面加点为需要注意的项目\n例如 Java7 的开服参数可以是（大型插件非常多，MaxPermSize 可以设置得更高）：\n-Xms 最小内存 -Xmx 最大内存 -XX:MaxPermSize=128M -XX:+AggressiveOpts -XX:+UseCompressedOops\nJava8 的参数可以是：\n-Xms 最小内存 -Xmx 最大内存 -XX:+AggressiveOpts -XX:+UseCompressedOops\n-XX:+AggressiveOpts 的含义是尽可能的使用更多对性能有帮助的优化功能\n-XX:+UseCompressedOops 的含义是指针压缩，可以减少一定的内存占用（64 位才支持）\n参数的优化 不要小瞧参数的修改带来的优化空间，有时候只修改一个参数，就是在线 100 人 TPS19 和 TPS16 的差距。参数的调整分别为 server.properties(原版服务器就有)，bukkit.yml（水桶服或者衍生版就有），spigot.yml（Spigot 或者衍生版就有），paper.yml(PaperSpigot 才有)。\n前面加点为需要注意的项目\nserver.properties 中可以优化性能的参数： view-distance，视距，默认值是 10。含义是玩家的视距也就是加载的区块范围，默认是 10 个区块，视距 10 加载的区块是视距 5 的四倍。加载更多的区块则需要更多的内存和运算能力。推荐将这个值设置在 5 或者 6，如果在线人数非常多可以设置为 4。降低视距可以有效减少内存的占用，也能有效提高 TPS，还可以减少宽带的使用量。这个参数对性能提升是立竿见影的。\ngenerate-structures，默认值是 true。含义是生成和计算一些特殊的环境，例如女巫塔、村民到达数量生成铁傀儡等等。设置为 false 可以减少这些特殊环境生成和周期性检查带来的开销。这个参数很少被提起，但是对性能的提升有着不少的帮助。例如我的服务器生存子服有 130 人左右在线，TPS 在 17 左右，关闭这个功能后提高到了 19 左右。需要彻底关闭这个参数，还需要在 spigot.yml 中把 save-structure-info 设置为 false。并且关服后手动删除每个世界（例如 world、world_nether、world_the_end）下的 data 文件夹里的 Fortress.dat、Mineshaft.dat、Stronghold.dat、Temple.dat、Village.dat 文件。\nnetwork-compression-threshold，默认值是 256。这个参数只有 1.8 的服务端才有，含义是网络封包压缩的阀值。例如设置为 16，代表封包大于 16 才被压缩，设置成 256 代表着封包大于 256 才被压缩。设置的值越小则会压缩更多的封包，可以使得宽带使用减少，提高网络流畅程度，但是也会增加性能的开销。如果性能够用可以设置为 128，使得更多通讯封包被压缩，一定程度上减少宽带使用率又不会带来太多的性能开销。设置的值太小，例如小于等于 32 会明显增加对性能的开销，不建议这么做。\nbukkit.yml 中可以优化性能的参数： spawn-limits，意思是限制实体的生成。这个并不是限制一个区块生成多少实体，而是针对一个人可以生成多少实体。例如 monsters: 70，在线人数只有 10 个人，则最多只能生成 700 个怪物实体（僵尸、骷髅、蜘蛛等等），适当的设置这些参数可以减少实体对性能的影响。\nchunk-gc，控制着区块的回收，单位是 Tick（1/20 秒），period-in-ticks 是指每过多少 tick 回收一次需要回收的区块，设置的太小会导致回收过于频繁而影响性能，设置的太大会导致需要回收的区块迟迟不回收使得内存占用过大。合理的数值一般是 300~400。load-threshold 是指达到多少需要回收的区块的时候才进行回收。例如设置成 300，只有当需要回收的区块到达 300 以上才进行回收，合理的设置这个数值可以使得额外只多占用一丁点内存却使得区块回收的性能开销可以被无视。一般设置为 300~600 比较合适。\nautosave，自动保存存档（地图、玩家数据等）的周期，单位是 Tick（1/20 秒），如果你使用了定时保存的插件，例如 Saveit、AutoSave 等等，你可以将他设置为 0，即关闭这个功能。这样可以减少服务器瞬卡发生的可能。\nspigot.yml 中可以优化性能的参数： user-cache-size，1.7.5 以上版本才有，其控制用户缓存的大小，如果你的服务器玩家很多，可以设置的更大一些，例如 5000。\nsave-user-cache-on-stop-only，1.7.5 以上版本才有，其含义是是否只在服务器关闭 / 重启的时候保存用户缓存，设置为 true 可以提高性能。\nview-distance，同 server.properties 里的 view-distance 一样。\nchunks-per-tick，是指每 tick（1/20 秒）扫描计算多少区块，计算的内容是作物的生长。默认值是 650，可以设置成 350 来提高性能。极端的情况可以设置成 150，但是会使得作物生长的速度明显变慢。\nmax-tick-time: （仅较新的版本有该参数，如 1.8.3+）是指每 tick，实体和 tile 最多可以用的时间（单位是毫秒），要明白其含义首先要解释什么是 TPS，TPS 的意思是每秒有多少 tick，最大值是 20，也就是每秒 tick20 次，每次 50 毫秒。如果运算量过大导致每 tick 计算了超过了 50 毫秒，那么 TPS 就会下降，一旦 TPS 低于 15 就会产生明显的卡顿。在这参数中 tile 代表着熔炉、箱子、牌子、骷髅头等等所能占用的最大时间，entity 是指的实体，例如动物、怪物、村民、展示框、掉落物、船、矿车等等。设置 tile 和 entity 的总和小于等于 30 则能明显降低 tile 和 entity 对 TPS 的影响，而服务器运算资源几乎一大半都是由这两者消耗的。设置 tile 为 10，entity 为 20 比较合适，如果实体非常多，还可以设置 tile 为 6，entity 为 24。\nanti-xray，服务端自带的反透视功能，俗称假矿。这个功能相比插件版的假矿来说，额外内存占用极少，少到可以忽略，并且矿物的变动计算是异步进行的，对 TPS 的影响很小。engine-mode 为 1 则是隐藏矿物，engine-mode 为 2 则是将非矿物也伪装成矿物，engine-mode 设置为 2 的效果最好，但是会额外吃一定的性能和宽带，但是 engine-mode 设置为 1 无法防御矿追。具体如何权衡请自行决定。如果你不需要本功能，例如你是纯 RPG 服务器，可以直接把 enabled 设置为 false 关闭这个功能，提高性能。\nnerf-spawner-mobs，简单来说就是让刷怪笼生成的怪物变成白痴，直观感受就是刷怪笼刷出的怪不能攻击了。默认为 false，意思是不开启。设置为 true 可以获得一定的性能提升。\nentity-activation-range，这个参数是控制实体的活跃范围，例如 monsters: 32 意思是在玩家附近 32 格范围内的怪物才会活跃（被计算 AI 等），减少这个数值可以明显提升性能，但是设置得过小会使得游戏难度大幅降低。一般可以把 monsters 设置为 24，animals 设置为 12，misc 设置为 2（misc 主要是掉落物，设置 2 可以使得掉落物几乎不再卡服）。 entity-tracking-range，这个参数是控制实体的可见范围，这个参数不会影响性能，对宽带的影响也极小。不建议修改这个参数，但是适当的降低数值可以减少客户端的卡顿。\nrandom-light-updates，随机的光照更新，设置为 true 的话服务器会随机更新光照，并且在区块加载的第一个 tick 运算光照逻辑。设置为 false 可以提高不少性能。\nsave-structure-info，在前面已经介绍了。\nmax-bulk-chunks，1.7.10 + 才有这个参数，意思是每个数据封包里塞多少个区块。适当提高这个数值，例如从 10 提高到 15 可以减少网络卡顿和客户端读取区块的速度，但是设置得过高会导致客户端崩溃。\nmax-entity-collisions，实体碰撞箱的阀值。建议设置为 2，可以减少密集卡服的问题。\nmax-tnt-per-tick，每 tick（1/20 秒）最多计算多少 TNT 爆炸，设置为 20 可以显著防御 TNT 蹦服。\npaper.yml 中可以优化性能的参数： keep-spawn-loaded，spawn 区块是否常驻内存，设置为 false 可以减少一定的内存占用和计算量\ntick-next-tick-list-cap，每 tick 最大的运算量，减少数值可以提高 TPS，例如设置为 8000\ntick-next-tick-list-cap-ignores-redstone，达到上面的运算阀值是否无视红石运算，设置为 true 可以显著减少红石对服务器性能的影响。\noptimize-explosions，是否开启爆炸算法优化，设置为 true 可以提升一定的服务器性能\nuse-async-lighting，是否让光照的逻辑运算异步化，设置为 true 可以使得光照运算不再影响 TPS，强烈推荐设置为 true\ncache-chunk-maps，是否缓存 chunkmaps，可以让区块的数据更多得被复用，可以一定程度提高性能，推荐设置为 true\nfast-drain，快速液体流动运算，推荐设置为 true，可以减少液体流动运算对服务器性能的影响\n优化插件的选择和一些插件建议 服务器的主要性能开销在于实体的运算（往往占用了一半的 CPU 时间），所以定时清理实体（怪物、动物等）和限制密集卡服的插件对性能的帮助是最大的。\n很多插件都支持使用 Mysql 来存储数据，例如 CoreProtect、QucikShop、LWC 等等，如果条件允许的话，请使用 Mysql 来代替文本数据库和 Sqlite。这么做可以一定程度的提高服务器的流畅程度。\n安装插件的时候也不要太懒使用网页后台现成的插件或者使用论坛上搬运的网盘地址下载。请到 bukkit 或者 spigot 官网看看插件有无新版本。举个例子，RPG 服常用插件 MythicMobs 很多服务器还在使用 1.* 的版本，然而目前最新版本为 2.0.6。2.0.0 相比 1.* 就有着不少的性能提升。2.0.5 版本相比老版本的改动在于修复 bug 和大幅提高性能，2.0.6 更是使得怪物技能和扫描异步化，明显提高了性能。所以说往往新版本的插件都意味着性能的提升和 bug 的修复，如果版本兼容，尽可能使用最新稳定版的插件。\n玩法也对性能有帮助 官方设置一些玩家的聚居点（类似新手村）可以让一部分玩家集中在一起，可以使得加载的区块数量减少（玩家共享了视野），也能减少玩家跑图带来的性能开销。提供公共的刷怪场也能减少玩家自建刷怪场的几率，可以一定程度上使得服务器更为流畅，提供公共的农场饲养动物也有类似的效果。\n找出卡服的真凶 1. 如何使用 Timing Timing 是 Bukkit 和其衍生服务端版本（Spigot、MCPC+、PaperSpigot 等）自带的一种性能诊断工具，可以很方便的查看服务端的性能是由那些部分所消耗的，以图表形式还能直观的查看重点性能消耗大户，对于腐竹来说可以很方便的定位卡服的插件或者卡服的原因，对于插件开发者来说可以直接定位到性能不佳的程序方法（Function），方便优化插件性能。为了确保真实性，下面的演示全部在真实的服务器上操作，为了保护玩家隐私和密码安全，已打码处理。\n要使用这个功能，首先你需要在服务器内或者直接在后台内输入指令 —— timings on 开启统计，具体如图所示：\n为了得到准确的统计结果，建议等待至少 15 分钟，如果是在瞬间卡顿的峰值附近，建议至少等待 5 分钟。\n在等待足够的时间后，输入指令 —— timings paste 稍等片刻，会生成一串网址，记下这个网址（图片已打码）\n现在打开图中的网址，即可查看服务端的『性能分析报告』了。需要注意的时候，不需要使用的时候请使用 timings off 指令关闭性能统计，否则会带来不必要的性能损耗。\n2. 如何读懂 Timing 首先，我们打开刚刚生成的网址，我们先从基础的信息开始阅读。\nTotal 是指从统计开始一共服务端运行的时间（由 Ticks 推算），Sample Time 是指统计总时长。后面紧跟着的是服务端的版本信息，例如我的是 PaperSpigot1.8.8，Average Entitys 是平均实体的数量，表示形式是 活跃实体数量 / 总实体数量。一般而言只有活跃实体才会消耗 CPU 时间。Average Players 是统计时间内平均这个服务端在线的人数（注意，是单个服务端的在线人数），例如我的是 105.81 人。Average TPS 是统计时段内平均的 TPS，例如我的是 19.44。Server Load 是指服务端负载水平。超过 100% 则意味着 TPS 会开始低于 20 的水平，一般超过 150% 就会有明显卡顿了。\n","date":"2022-04-05T00:00:00Z","image":"https://skae.top/p/mcsvspeedup/00_hu63aa5994080ad5065e8069b1db94e92d_1600379_120x120_fill_q75_box_smart1.jpeg","permalink":"https://skae.top/p/mcsvspeedup/","title":"《我的世界》服务器优化教程"},{"content":"1. 首先安装中文字体支持的软件包 1 sudo apt-get install -y ttf-wqy-zenhei language-pack-zh-hant language-pack-zh-hans 2. 然后用编辑器修改/etc/environment 1 sudo vim /etc/environment 被修改的文件没有后缀名，请注意\n你可以看到第1行有如下内容\n1 PATH=\u0026#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games\u0026#34; 接下来要做就是，按i进入编辑模式，在这一行下面添加\n1 2 LANG=\u0026#34;zh_CN.UTF-8\u0026#34; LANGUAGE=\u0026#34;zh_CN:zh:en_US:en\u0026#34; ESC，:wq或者ZZ保存\n3. 最后执行 1 sudo dpkg-reconfigure locales 一直点回车，直到他那个[more]变成了你选择的提示框\n然后输入487与488 ，回车\n在第2个界面输入5，回车\n重启一下\n至此，中文语言切换完毕\n","date":"2022-04-05T00:00:00Z","image":"https://skae.top/p/shell-chinese/00_huefc9290d81713b319ab68a7f845bb37c_267518_120x120_fill_q75_box_smart1.jpg","permalink":"https://skae.top/p/shell-chinese/","title":"Ubuntu改语言为中文"},{"content":"原因为未安装 ca-certificates\n可以先编辑 /etc/apt/sources.list 文件临时使用 http 源\n1 nano /etc/apt/sources.list 或者\n1 vim /etc/apt/sources.list 粘贴或者更改源（https:// 到 http://)\n1 2 3 4 deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free vim使用方法请自行查资料\n然后安装 ca-certificates 包（注意：看到有的文章将源改为http便无下文，建议继续执行以下步骤改回https，使用http将大幅度提高网络风险）\n1 2 apt update apt install ca-certificates 安装完成后编辑源 /etc/apt/sources.list\n1 2 3 4 deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free 执行apt update更新，完成\n本文由 简悦 SimpRead 转码， 原文地址 blog.csdn.net\n","date":"2021-11-13T00:00:00Z","permalink":"https://skae.top/p/linux-apt-error/","title":"Linux 报错 Certificate verification failed The certificate is NOT trusted."},{"content":"Unix/Linux 将每一个设备都当成一个文件，放在 / dev 目录下。这些文件有的对应着一个真实存在的物理设备；有的则代表一个虚拟设备，提供一些特定的功能。\n下面介绍三个常用的虚拟设备：\n/dev/null\n“空”设备，也有人称它为黑洞。任何输入到这个 “设备” 的数据都将被直接丢弃。最常用的用法是把不需要的输出重定向到这个文件。例如：\n1 $ run.sh 1\u0026gt;/dev/null 2\u0026gt;\u0026amp;1 #将标准输出和错误输出重定向到/dev/null，运行这个脚本不会输出任何信息到终端 /dev/zero\n“零” 设备，可以无限的提供空字符（0x00，ASCII 代码 NUL）。常用来生成一个特定大小的文件。例如：\n1 $ dd if=/dev/zero of=./output.txt bs=1024 count=1 #产生一个1k大小的文件output.txt /dev/random 和 / dev/urandom\n随机数设备，提供不间断的随机字节流。二者的区别是 / dev/random 产生随机数据依赖系统中断，当系统中断不足时，/dev/random 设备会 “挂起”，因而产生数据速度较慢，但随机性好；/dev/urandom 不依赖系统中断，数据产生速度快，但随机性较低。\n读取这两个文件的输出如下：\n1 2 3 4 5 6 7 8 9 $ cat /dev/random | od -x 0000000 34fa b5ea 0901 b7e0 27a9 623a 0879 d9eb 0000020 d212 4f6f d928 6637 84a4 8ec5 fc2c 4896 $ cat /dev/urandom | od -x | head -n 5 0000000 8048 4dbd 07c9 2119 02d0 221b 89ba af7f 0000020 3d6f 6a72 3752 4a09 5a47 a3fb dc98 ed9f 0000040 f3e8 e82d 6748 2e14 de80 7554 bb52 f56c 0000060 de73 0e51 262f 5a63 af69 b45c ee49 c1bf 0000100 76b4 6db5 4e5b e438 70fb d207 a28c 04a8 在上面的例子中，读取 / dev/random 文件在输出了两行之后就停住了（系统中断不足），而 / dev/urandom 产生数据速度很快，没有任何停顿。\n下面这个例子，利用 / dev/urandom 设备产生一个 128 位的随机字符串：\n1 2 3 $ str=$(cat /dev/urandom | od -x | tr -d \u0026#39; \u0026#39; | head -n 1) $ echo ${str:7} 17539187d2e8b8e26d49bec90465c14d 本文由 简悦 SimpRead 转码， 原文地址 blog.csdn.net\n","date":"2021-11-13T00:00:00Z","permalink":"https://skae.top/p/linux-bucket/","title":"Linux中的虚拟设备/dev/null、/dev/zero、/dev/random和/dev/urandom"},{"content":"ncat 或者说 nc 是一款功能类似 cat 的工具，但是是用于网络的。它是一款拥有多种功能的 CLI 工具，可以用来在网络上读、写以及重定向数据。 它被设计成可以被脚本或其他程序调用的可靠的后端工具。同时由于它能创建任意所需的连接，因此也是一个很好的网络调试工具。\nncat/nc 既是一个端口扫描工具，也是一款安全工具，还是一款监测工具，甚至可以做为一个简单的 TCP 代理。 由于有这么多的功能，它被誉为是网络界的瑞士军刀。 这是每个系统管理员都应该知道并且掌握它。\n在大多数 Debian 发行版中，nc 是默认可用的，它会在安装系统的过程中自动被安装。 但是在 CentOS 7/RHEL 7 的最小化安装中，nc 并不会默认被安装。 你需要用下列命令手工安装。\n1 yum install nmap-ncat -y 系统管理员可以用它来审计系统安全，用它来找出开放的端口然后保护这些端口。 管理员还能用它作为客户端来审计 Web 服务器、telnet 服务器、邮件服务器等， 通过 nc 我们可以控制发送的每个字符，也可以查看对方的回应。\n我们还可以用它捕获客户端发送的数据以此来了解这些客户端是做什么的。\n在本文中，我们会通过下面这些例子来学习如何使用 nc 命令。\n1. 监听入站连接 通过 -l 选项，ncat 可以进入监听模式，使我们可以在指定端口监听入站连接。 完整的命令是这样的：\n1 ncat -l port_number 比如\n1 ncat -l 8080 服务器就会开始在 8080 端口监听入站连接。\n2. 连接远程系统 使用下面命令可以用 nc 来连接远程系统\n1 ncat IP_address port_number 我们来看个例子\n1 ncat 192.168.1.100 80 这会创建一个连接，连接到 IP 为 192.168.1.100 的服务器上的 80 端口，然后我们就可以向服务器发送指令了。 比如我们可以输入下面内容来获取完整的网页内容\n1 GET / HTTP/1.1 或者获取页面名称\n1 GET / HTTP/1.1 或者我们可以通过以下方式获得操作系统指纹标识\n1 HEAD / HTTP/1.1 这会告诉我们使用的是什么软件来运行这个 web 服务器的\n3. 连接 UDP 端口 默认情况下，nc 创建连接时只会连接 TCP 端口。 不过我们可以使用 -u 选项来连接到 UDP 端口\n1 ncat -l -u 1234 现在我们的系统会开始监听 UDP 的 1234 端口，我们可以使用下面的 netstat 命令来验证这一点\n1 2 3 netstat -tunlp | grep 1234 udp 0 0 0.0.0.0:1234 0.0.0.0:* 17341/nc udp6 0 0 :::1234 :::* 17341/nc 假设我们想发送或者说测试某个远程主机 UDP 端口的连通性，我们可以使用下面命令\n1 ncat -v -u {host-ip} {udp-port} 比如\n1 2 3 ncat -v -u 192.168.105.150 53 Ncat: Version 6.40 ( http://nmap.org/ncat ) Ncat: Connected to 192.168.105.150:53 4. 将 nc 作为聊天工具 nc 也可以作为聊天工具来用，我们可以配置服务器监听某个端口，然后从远程主机上连接到服务器的这个端口，就可以开始发送消息了。 在服务器这端运行：\n1 ncat -l 8080 在远程客户端主机上运行：\n1 ncat 192.168.1.100 8080 之后开始发送消息，这些消息会在服务器终端上显示出来。\n5. 将 nc 作为代理 nc 也可以用来做代理。比如下面这个例子\n1 ncat -l 8080 | ncat 192.168.1.200 80 所有发往我们服务器 8080 端口的连接都会自动转发到 192.168.1.200 上的 80 端口。 不过由于我们使用了管道，数据只能被单向传输。 要同时能够接受返回的数据，我们需要创建一个双向管道。 使用下面命令可以做到这点\n1 2 mkfifo 2way ncat -l 8080 0\u0026lt;2way | ncat 192.168.1.200 80 1\u0026gt;2way 现在你可以通过 nc 代理来收发数据了\n6. 使用 nc 拷贝文件 nc 还能用来在系统间拷贝文件，虽然这么做并不推荐，因为绝大多数系统默认都安装了 ssh/scp。 不过如果你恰好遇见个没有 ssh/scp 的系统的话， 你可以用 nc 来作最后的努力。\n在要接受数据的机器上启动 nc 并让它进入监听模式：\n1 ncat -l 8080 \u0026gt; file.txt 现在去要被拷贝数据的机器上运行下面命令：\n1 ncat 192.168.1.100 8080 --send-only \u0026lt; data.txt 这里，data.txt 是要发送的文件。 -–send-only 选项会在文件拷贝完后立即关闭连接。 如果不加该选项， 我们需要手工按下 ctrl+c 来关闭连接。\n我们也可以用这种方法拷贝整个磁盘分区，不过请一定要小心\n7. 通过 nc 创建后门 nc 命令还可以用来在系统中创建后门，并且这种技术也确实被黑客大量使用。 为了保护我们的系统，我们需要知道它是怎么做的。 创建后门的命令为：\n1 ncat -l 10000 -e /bin/bash -e 标志将一个 bash 与端口 10000 相连。现在客户端只要连接到服务器上的 10000 端口就能通过 bash 获取我们系统的完整访问权限：\n1 ncat 192.168.1.100 10000 8. 通过 nc 进行端口转发 我们通过选项 -c 来用 nc 进行端口转发，实现端口转发的语法为：\n1 ncat -u -l 80 -c \u0026#39;ncat -u -l 8080\u0026#39; 这样，所有连接到 80 端口的连接都会转发到 8080 端口\n9. 设置连接超时 nc 的监听模式会一直运行，直到手工终止。 不过我们可以通过选项 -w 设置超时时间:\n1 ncat -w 10 192.168.1.100 8080 这会导致连接 10 秒后终止，不过这个选项只能用于客户端而不是服务端。\n10. 使用 -k 选项强制 nc 待命 当客户端从服务端断开连接后，过一段时间服务端也会停止监听。 但通过选项 -k 我们可以强制服务器保持连接并继续监听端口。 命令如下：\n1 ncat -l -k 8080 现在即使来自客户端的连接断了也依然会处于待命状态\n本文由 简悦 SimpRead 转码， 原文地址 www.cnblogs.com\n","date":"2021-11-13T00:00:00Z","permalink":"https://skae.top/p/ncat/","title":"ncat(nc) 命令使用方法"},{"content":"烹饪锅食谱 以下是烹饪锅食谱的列表：\n食物 名称 DLC 需要食材 1 食材限制 芦笋汤 +20 +18.75 +5 15 10 10 ×1×0.5(×1.5) () 培根蛋 +20 +75 +5 20 40 10 × 1.5 × 2.0 No 香蕉冰棒 +20 +12.5 +33 10 10 20 ( ) × 1 × 1 × 1 No 浓汤 +60 +18.75 +5 10 20 30 × 3×1 蝴蝶玛芬 +20 +37.5 +5 15 40 1 或× 1 × 0.5 No 加州寿司卷 +20 +37.5 +10 10 10 20 × 2 × 1.0 鱼子酱 +3 +12.5 +33 10 40 20 × 1或× 3 × 1.0 酸橘汁腌鱼 +20 +25 +5 10 10 20 × 2.0×1 (No) 咖啡 +3 +9.375 -5 10 10 30 × 3 只能有 奶油土豆泥 +20 +37.5 +33 15 20 20 × 2 × 1 No 火龙果派 +40 +75 +5 15 40 1 × 1 No 旋风薯塔 +3 +37.5 +15 10 15 10 ×1 ×1 No , 最多×1 黑豆饭 +20 +75 +15 8 70 30 × 0.5 × 3 鱼塔可 +20 +37.5 +5 6 10 10 × 0.5 × 1 鱼排 +40 +37.5 +5 10 40 10 × 0.5 × 1 最多 × 1 果酱泥 +3 +37.5 +5 15 10 0 × 0.5 No 花瓣沙拉 +40 +12.5 +5 6 10 10 ×1×2.0 No 鲜果可丽饼 +60 +150 +15 10 20 30 × 1.5 × 1 ×1 必须在中烹煮 蛙腿三明治 +20 +37.5 +5 15 40 1 × 1 × 0.5 水果拼盘 +20 +25 +5 6 10 0 × 3.0 No 鼹梨沙拉酱 +20 +37.5 0 10 10 10 或×1×1 No 软糖蛋糕 -3 +150 -5 20 40 1 × 1×1 No 硬壳塔可 +20 +37.5 +5 15 20 1 × 2 × 0.5 蜂蜜火腿 +30 +75 +5 15 40 2 × 2.0 × 1 No , ≤ 1.0 蜂蜜肉块 +20 +37.5 +5 15 40 2 × 0.5 × 1 \u0026lt;2.0,No 冰淇淋 0 +25 +50 3 10 10 × 1 ×1×1 No 冰茶 +3 +12.5 +33 6 10 30 ×2×1×1 雷根糖 +122 (超过2分钟) +0 +5 从不 50 12 × 1 No 果冻冰棒 +20 +12.5 0 3 10 20 ×1×1×1 烤肉串 +3 +37.5 +5 15 40 5 × 0.5 × 1 最多× 1 × 1 龙虾浓汤 +60 +25 +10 10 10 30 × 1 × 1 龙虾大餐 +60 +37.5 +50 15 20 25 × 1 × 1 No 曼德拉草汤 +100 +150 +5 6 60 10 × 1 肉丸子 +3 +62.5 +5 10 15 -1 × 0.5 No 炖肉汤 +12 +150 +5 10 15 0 × 3.0 No 西瓜冰 +3 +12.5 +20 3 10 10 ×1×1×1 No 怪物千层面 -20 +37.5 -20 6 10 10 × 2.0 No 鞑靼怪物肉 +3 +37.5 +10 10 20 30 × 2.0 × 1.0 × 0.5 必须在中烹煮 马赛贻贝汤 +20 +37.5 +15 10 20 30 × 2 × 2.0 必须在中烹煮 荨麻卷 +20 +25 +5 6 10 0 × 3 波兰饺子 +40 +37.5 +5 20 20 5 × 1.0 × 0.5 × 0.5 No 粉末蛋糕 -3 0 0 18750 10 10 ×1×1×1 南瓜饼干 0 +37.5 +15 10 40 10 × 1 × 2 蔬菜杂烩 +3 +25 +5 15 20 0 × 0.5 No 莎莎酱 +3 +25 +33 15 10 20 ×1×1 No 海鲜秋葵汤 +40 +37.5 +20 10 20 10 × 2.5 鱼翅汤 +40 +12.5 -10 10 10 20 × 1 蛇骨汤 +40 +25 +10 10 20 20 × 2 × 2.0 辣椒炖肉 +20 +37.5 0 10 10 10 × 1.5 × 1.5 辣菜刺 +3 +25 +33 15 10 15 or()×1×1.5×1 清蒸火腿三明治 +40 +37.5 +15 6 40 5 or × 1.0 × 1.0 × 1 No 酿茄子 +3 +37.5 +5 15 40 1 × 1 × 0.5 酿烤辣椒 +30 +25 -5 15 40 20 ×1×0.5 No≤1.5 海陆大餐 +60 +37.5 +33 10 10 30 × 2.5 × 1.5 No 红薯舒芙蕾 +20 +37.5 +15 10 20 30 × 2 × 2.0 必须在中烹煮 太妃糖 -3 +25 +15 15 40 10 × 3 No 茶 +3 +12.5 +33 1 ( ) 10 25 ×2×1 No 综合坚果 +30 +12.5 +5 15 10 10 ×1×1×1 No 马赛热带鱼汤 +20 +37.5 +15 10 40 35 ×1×1×1× 1 火鸡大餐 +20 +75 +5 6 60 10 × 2 × 0.5 × 0.5 or × 0.5 鳗鱼寿司 +20 +18.8 +5 10 10 20 × 1 × 1 松饼 +60 +37.5 +5 6 10 10 ×1×1.0×1 失败料理 0 0 0 6 5 -2 任何无效的食谱 参考资料：烹饪锅 | Don\u0026rsquo;t Starve 中文維基 | Fandom\n所有的食物系数都是以十进制方式表示。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2021-07-15T00:00:00Z","image":"https://skae.top/p/dstcrockpot/00_hu59df01dd9cfb485ca1960cb6f6bf535d_181785_120x120_fill_box_smart1_3.png","permalink":"https://skae.top/p/dstcrockpot/","title":"烹饪锅食谱"},{"content":"命令控制台默认是启用状态。如果它因为任何原因没有处于开启状态，你首先要做的就是调整你存档中的 settings.ini 文件。它可以在 \u0026ldquo;DoNotStarveTogether\u0026rdquo; 文件夹里被找到，位于以下路径：\nWindows, Mac: \\Klei\\DoNotStarveTogether\\client.ini\nLinux: ~/.klei/DoNotStarve/client.ini 找到 settings.ini 然后用记事本打开。找到 section 部分，并确保在下面有ENABLECONSOLE = true。如果它它被设置为 false ，将它改为 true 并保存。然后在游戏中打开控制台，英文键盘下默认按 \u0026ldquo;~\u0026rdquo; 键。这可以随时在控制菜单中修改。\n本地命令模式\n注： * 你在重新加载世界后必须重新输入每一个命令。\nLua 支持可变数量参数的函数，例如，你只想生成一个野牛的预设，你可以不填 \u0026ldquo;amount\u0026rdquo; 参数：\u0026ldquo;c_spawn(\u0026lsquo;beefalo\u0026rsquo;)\u0026quot;。 如果你不是主机（或者它是一个专用服务器，你是这个服务器的管理员），大部分命令需要远程执行。在控制台中按 Ctrl 来切换远程命令模式。一小部分命令（例如显示地图）仍然可以在本地模式下完成。 远程命令模式\n许多饥荒命令 仍然在 DST（多人版饥荒）中可用，因此你仍然可以阅读它。\n简单命令 生成实例 1 c_spawn(\u0026#34;prefab\u0026#34;,amount) 利用 DebugSpawn(\u0026ldquo;预设\u0026rdquo;) 命令，在鼠标所指处生成一定数量被指定的 \u0026ldquo;预设\u0026rdquo;。\n获得物品 1 c_give(\u0026#34;prefab\u0026#34;,amount) 在你的物品栏中生成一定数量被指定的 \u0026ldquo;预设\u0026rdquo;。只适用于可以被储存在物品栏的背包 和物品 。\n脚本（未测试） 1 c_doscenario(scenario) 应用一个选择的脚本并执行它。\n生命值 1 c_sethea​lth(percent) 用百分比设置你的生命值。注：使用分数 0.90 = 90%\n理智值 1 c_setsanit​y(percent) 用百分比设置你的理智值。注：使用分数 0.90 = 90%\n饥饿值 1 c_sethunger(pe​rcent) 用百分比设置你的饥饿值。注：使用分数 0.90 = 90%\n湿度 1 c_setmoisture(pe​rcent) 用百分比设置你的湿度。注：使用分数 0.90 = 90%\n温度 1 c_settemperature(degrees) 用百分比设置你的温度。注：使用分数 0.90 = 90%\n上帝模式 1 c_godmode() 玩家的理智值、饥饿值和被攻击时生命值不再下降。上帝模式下，你不能用命令改变的你统计数据。如果处于死亡状态，将会复活你（通过 c_godmode() 复活后不会将你置于上帝模式）。再次使用命令停用上帝模式。\n超级上帝模式 1 c_supergodmode() 和上帝模式一样但会将你的各项统计数据设置为满，即使你将它关闭。与 c_godmode() 相似,，它也会复活你（通过 c_supergodmode() 复活后不会将你置于上帝模式）。再次使用命令停用上帝模式。\n设置额外的移动速度 1 c_speedmult(multiplier) 标准额外的移动速度为 1。设置为 2 使你以两倍的速度移动，设置为 20 可以让你轻松地穿过墙和 \u0026ldquo;越过\u0026rdquo; 水。\n这儿有其他一些命令，但是它们很难使用而且用处不大。\n玩家命令 **注：**如果你不是管理员的客户端发送远程命令，那么大多数命令将不会有效（按 Ctrl 键切换控制台远程命令模式）。\n动作预测 1 ThePlayer:EnableMovementPrediction(true) 默认情况下为开启状态，将 true 改为 false 可以关闭动作预测，关闭动作预测通常对战斗有一些帮助。该命令只有客户端执行才有效，主机或服务器执行将不会有效。（必须在控制台的本地模式下执行该命令才有效，也就是必须关闭控制台的远程命令模式）\n**译者注：**动作预测也可以直接在游戏设置中关闭，设置 \u0026ndash;\u0026gt; 滞后的奖励（Lag Compensation），将其修改为 无（None）就可以关闭动作预测。\n创造模式 1 ThePlayer.components.builder:GiveAllRecipes() 你可以合成任何东西。\n生命值上限 1 ThePlayer.components.health:SetMaxHealth(value) 改变你的角色 的生命 值上限\n理智值上限 1 ThePlayer.components.sanity:SetMax(value) 改变你的角色 的理智 值上限\n饥饿值上限 1 ThePlayer.components.hunger:SetMax(value) 改变你的角色 的饥饿 值上限\n暂停饥饿 1 ThePlayer.components.hunger:Pause(true) 你的角色 不再降低饥饿值。\n伤害倍数 1 ThePlayer.components.combat.damagemultiplier = value 改变你的角色 的伤害倍数\n海狸 1 ThePlayer.components.beaverness:SetPercent(.01) 把伍迪 变成海狸 。把 .01 改为 1 可以让你变回伍迪。\n其他玩家命令 注：下面许多命令通常用于玩家，像 c_godmode() 或者 c_sethealth(1)，通过先使用 c_select(AllPlayers[number]) 可以对其他玩家执行命令。所以你需要一个玩家列表来知道各个玩家的编号（number ）：\n列出所有玩家的用户名和编号 1 c_listallplayers() 取一个玩家 1 AllPlayers[number] AllPlayers[1] 取的是主机玩家。其他玩家的编号显示在记分板上（某些情况下编号有可能是错的，你可以先用 c_listallplayers() 来查看每个用户编号的用户名和角色）。大部分玩家命令可以用 AllPlayers[number] 代替 ThePlayer。\n对所有玩家使用同一命令 1 for k,v in pairs(AllPlayers) do command end 只修改 command，用其他命令代替 command，使用 \u0026ldquo;v\u0026rdquo; 代替命令中的 AllPlayers[number]。例如， \u0026ldquo;for k,v in pairs(AllPlayers) do c_move(v) end\u0026rdquo; 将会把所有玩家都移动到鼠标所指的位置。\n移动一个玩家 1 c_move(AllPlayers[number]) 移动玩家到鼠标所指的位置。\n杀死一个玩家 1 AllPlayers[number]:PushEvent(\u0026#39;death\u0026#39;) 杀死玩家。\n复活玩家 1 AllPlayers[number]:PushEvent(\u0026#39;respawnfromghost\u0026#39;) 复活玩家。\n传送至玩家 1 c_goto(AllPlayers[number]) 传送到对应编号的玩家，玩家编号可以通过 c_listallplayers() 获取。\n丢掉玩家物品栏的物品 1 AllPlayers[number].components.inventory:DropEverything() 丢掉对应编号的玩家物品栏的所有物品，玩家编号可以通过 c_listallplayers() 获取。\n让玩家重新选择角色 1 c_despawn(AllPlayers[number]) 使用该命令将会删除玩家物品栏的物品而不会掉落，所以推荐你先让玩家的物品丢掉他们的物品，或者使用上一条命令 DropEverthing()。\n截至 2016 年 6 月 25 日，增加了一个新的命令来指定玩家。你可以通过一个玩家名 UserToPlayer(\u0026lsquo;玩家名\u0026rsquo;) 来指定一个玩家而不是使用玩家编号。例如，杀死一名叫做 \u0026ldquo;PlayerA\u0026rdquo; 的玩家，他的用户编号为 5，你可以执行：\n1 AllPlayers[5]:PushEvent(\u0026#39;death\u0026#39;) 但在此之前你必须先运行 c_listallplayers() 来知道玩家编号，十分麻烦。\n为了简单一点地执行命令，你可以把命令改成：\n1 UserToPlayer(\u0026#39;PlayerA\u0026#39;):PushEvent(\u0026#39;death\u0026#39;) 世界命令 传送到预设 1 c_gonext(\u0026#34;prefab\u0026#34;) 输入该命令后，你将被传送到第一个预设的实体. 如果存在多个预设的实体，控制台日志将会显示实体数量的列表，再次执行相同的命令将会传送玩家到下一个在世界中生成的预设的实体。\n删除鼠标下的实体 1 2 ConsoleWorldEntityUnderMouse():Remove() c_select():Remove() 输入该命令后，将会删除你鼠标下的物品。在专用服务器上使用第二个命令，因为第一个不能在专用服务器上使用。\n显示地图 1 2 minimap = TheSim:FindFirstEntityWithTag(\u0026#34;mini­map\u0026#34;) TheWorld.minimap.MiniMap:ShowArea (0,0,0,10000) 这是一个本地命令，且客户端不可用。\n跳过一天 1 TheWorld:PushEvent(\u0026#34;ms_nextcycle\u0026#34;) 跳过时间 1 TheWorld.net.components.clock:OnUpdate(16*30*x) 跳过 x 天。将 x 修改为所要跳的天数（例如，16304.5 为跳过 4.5 天） _警告：_数值太大可能会冻结游戏。（取决于电脑的运算速度）\n跳过时间单元并更新 1 LongUpdate(X) 对世界对象执行 \u0026ldquo;LongUpdate\u0026rdquo; 事件并跳过 X 个时间单元\n_注：_每一个时间部分有 30 个时间单元。想要跳过一天可以使用 LongUpdate(480) 或者用乘法计算，例如 LongUpdate(X1630) 或者 LongUpdate(X*TUNING.TOTAL_DAY_TIME) X 为想要跳过的天数。\n_译者注：_每天有 16 个小部分，每部分有 30 个时间单元，每单元为现实中的一秒，所以一天为现实中的 8 分钟。（详见日夜周期 ）\n跳过时钟阶段 1 TheWorld:PushEvent(\u0026#34;ms_nextphase\u0026#34;) 跳过当前时钟阶段。\n设置时钟阶段 1 TheWorld:PushEvent(\u0026#34;ms_setclocksegs\u0026#34;, {day=x,dusk=y,night=z}) 设置每个时钟阶段的时间部分的数量。如果 x + y + z 加起来超过 16 将会产生错误。注意这样的修改第二天会复原。\n例子：\n1 TheWorld:PushEvent(\u0026#34;ms_setclocksegs\u0026#34;, {day=14,dusk=1,night=1}) 非常长的白天，非常短的黄昏和夜晚（只给黄昏一个时间部分和夜晚一个时间部分）\n设置季节的时钟阶段 1 TheWorld:PushEvent(\u0026#34;ms_setseasonclocksegs\u0026#34;, {summer={day=sx,dusk=sy,night=sz}, winter={day=wx,dusk=wy,night=wz}}) 为指定季节设置每个时钟阶段的时间部分的数量。如果 x + y + z 加起来超过 16 将会产生错误。不像设置时钟阶段一样，该设置是永久性的。\n例子：\n1 TheWorld:PushEvent(\u0026#34;ms_setseasonclocksegs\u0026#34;, {summer={day=14,dusk=1,night=1}, winter={day=13,dusk=1,night=2}}) 非常长的白天，非常短的黄昏和夜晚（夏天：只给黄昏一个时间部分和夜晚一个时间部分，冬天：只给黄昏一个时间部分和夜晚两个个时间部分）\n设置季节长度 1 TheWorld:PushEvent(\u0026#34;ms_setseasonlength\u0026#34;, {season=\u0026#34;summer\u0026#34;, length=15}) 设置季节的长度。\n进入夏季 1 TheWorld:PushEvent(\u0026#34;ms_setseason\u0026#34;, \u0026#34;summer\u0026#34;) 进入夏季\n进入冬季 1 TheWorld:PushEvent(\u0026#34;ms_setseason\u0026#34;, \u0026#34;winter\u0026#34;) 进入冬季\n当添加了巨人的统治 DLC，会有额外的命令 TheWorld:PushEvent(\u0026ldquo;ms_setseason\u0026rdquo;, \u0026ldquo;spring\u0026rdquo;)​ 和 TheWorld:PushEvent(\u0026ldquo;ms_setseason\u0026rdquo;, \u0026ldquo;autumn\u0026rdquo;)​\n开始下雨 1 TheWorld:PushEvent(\u0026#34;ms_forceprecipitation\u0026#34;) 开始下雨\n停止下雨 1 TheWorld:PushEvent(\u0026#34;ms_forceprecipitation\u0026#34;, false) 停止下雨。这包括青蛙雨 。\n生成闪电 1 TheWorld:PushEvent(\u0026#34;ms_sendlightningstrike\u0026#34;, ConsoleWorldPosition()) 闪电击中玩家，如果靠近避雷针的话，则击中避雷针。\n陨星撞击 1 c_spawn(\u0026#34;shadowmeteor\u0026#34;, 1) 陨星撞击在鼠标的位置。随机生成不同类型的岩石。\n激活所有的事件 1 for k, v in pairs(SPECIAL_EVENTS) do if v ~= SPECIAL_EVENTS.NONE then local tech = TECH[k] if tech ~= nil then tech.SCIENCE = 0 end end end function IsSpecialEventActive(event) return true end 同一事件内激活所有事件 。\n测量距离 1 print(math.sqrt(ThePlayer:GetDistanceSqToInst(ConsoleWorldEntityUnderMouse()))) 在控制台日志中输出玩家和鼠标指着的物体的距离（默认情况下按 Ctrl + L 显示控制台日志）。\n网络 / 服务器命令 踢 / 封禁一个玩家 1 2 TheNet:Kick(userid) TheNet:Ban(userid) 注意，这可以通过记分板更简单得完成。userid 可以通过 AllPlayers 表来获取，先找到你想要踢出服务器的玩家的编号（见上面的其他玩家命令 部分），然后使用 AllPlayers[#].userid。\n例子：\nc_listallplayers()\n[1] (KU_aabbccdd) Player1 [2] (KU_AABBCCDD) Player2 如果想要在服务器上封禁 Player2，控制台中输入命令\n1 _TheNet:Ban(AllPlayers[2].userid)_ 或者\n1 _TheNet:Ban(\u0026#34;KU_AABBCCDD\u0026#34;)_ 临时封禁一个玩家 1 TheNet:BanForTime(userid,time_in_seconds) 可以短时间内封禁玩家。userid 为将要被封禁的玩家的 KU id。获取到它后，它可以被放到这种格式里：\nTheNet:BanForTime(\u0026ldquo;KU_aabbccdd\u0026rdquo;, 120).\n执行后会封禁相应 KU id 的玩家 120 秒。如果你的服务器拥有多个世界（洞穴和上层世界），这个命令需要在两个服务端都输入。\n连接服务器 1 c_connect(\u0026#34;IP address\u0026#34;, port, \u0026#34;password\u0026#34;) 如果无法进行常规的连接，可以使用该命令直接连接一个 IP 地址。默认情况下，端口是 10999。如果服务器没有密码的话，你可以不填密码参数：c_connect(\u0026ldquo;10.0.0.8\u0026rdquo;, 10999)\n重新加载世界 1 c_reset() 不保存游戏并重载世界（也就是重载到上一个储存点）。如果你是一个客户端的话，该命令可能会造成你的游戏崩溃（除非你用远程命令模式发送该命令）。\n重新生成世界 1 c_regenerateworld() 重生生成世界。\n重新生成世界碎片 1 c_regenerateshard() 重新生成世界碎片。\n保存 1 c_save() 强制服务器立即保存。（服务器通常在夜晚结束的时候自动保存）\n关闭服务器 1 c_shutdown( true / false) true 会保存游戏，false 不会保存游戏。 c_shutdown() 和 c_shutdown(true) 是一样的。\n回档 1 c_rollback(count) 回档服务器一定次数。 c_rollback() 会回档一次，c_rollback(3) 会回档三次。\n启用 / 禁用新玩家加入 1 TheNet:SetAllowIncomingConnections( true / false ) 默认情况下设置为 true （新玩家可以加入）。设置为 false 将禁止玩家进入。\n发送一个服务器公告 1 c_announce(\u0026#34;announcement\u0026#34;) 可以发送一个公告给玩家，例如即将关闭 / 重启服务器，让玩家知道即将断线。\n杂项命令 清空停尸间（讣告） 1 ErasePersistentString(\u0026#34;morgue\u0026#34;) 清空停尸间，需要关闭并重启游戏才能看到清空效果。\n计算预设的数量 1 c_countprefabs(\u0026#34;prefab\u0026#34;) 在专用服务器上计数结果将会输出在控制台上\n生成虫洞 没有只用一行的命令，请逐步输入 用这个命令生成虫洞 1： worm1 = c_spawn(\u0026ldquo;wormhole\u0026rdquo;) 用这个命令生成虫洞 2： worm2 = c_spawn(\u0026ldquo;wormhole\u0026rdquo;) 创建虫洞 1 到虫洞 2 之间的连接： worm1.components.teleporter.targetTeleporter = worm2 还有回来的连接： worm2.components.teleporter.targetTeleporter = worm1 完成！ 生成一只被驯化了的牛 1 local beef = c_spawn(\u0026#34;beefalo\u0026#34;); beef.components.hunger:DoDelta(400); beef.components.domesticatable:DeltaTendency(\u0026#34;DEFAULT\u0026#34;, 1); beef:SetTendency(); beef.components.domesticatable.domestication = 1; beef.components.domesticatable:BecomeDomesticated(); _用下面的值替换 DEFAULT 来改变牛的特征。\u0026quot;_RIDER\u0026rdquo;,\u0026ldquo;ORNERY\u0026rdquo;,\u0026ldquo;PUDGY\u0026rdquo;\n参考资料： dontstarve.fandom.com\n","date":"2021-07-12T00:00:00Z","image":"https://skae.top/p/dstcmd/00_hu98af69dd04e5bb722241122ff4aea059_205115_120x120_fill_box_smart1_3.png","permalink":"https://skae.top/p/dstcmd/","title":"饥荒联机版中的命令"},{"content":"https://box.sllzy.top/\n注册送5G\n不限速 分享文件等基本功能 离线下载 在线压缩 在线解压 打包下载 WebDav ","date":"2021-04-10T00:00:00Z","image":"https://skae.top/p/dibox/main-slide-img2_hu5842370a65d155cf3119643830c7b6f6_127008_120x120_fill_box_smart1_3.png","permalink":"https://skae.top/p/dibox/","title":"布丁盘盘"},{"content":"Markdown 标题 Markdown 标题有两种格式。\n使用 = 和 - 标记一级和二级标题 = 和 - 标记语法格式如下：\n1 2 3 4 5 我展示的是一级标题 ================= 我展示的是二级标题 ----------------- 显示效果如下：\n我展示的是一级标题 我展示的是二级标题 使用 # 号标记 使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。\n1 2 3 4 5 6 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 显示效果如下：\n一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 Markdown 段落 Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。\n当然也可以在段落后面使用一个空行来表示重新开始一个段落。\n字体 Markdown 可以使用以下几种字体：\n1 2 3 4 5 6 *斜体文本* _斜体文本_ **粗体文本** __粗体文本__ ***粗斜体文本*** ___粗斜体文本___ 显示效果如下所示：\n斜体文本\n斜体文本\n粗体文本\n粗体文本\n粗斜体文本\n粗斜体文本\n分隔线 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n1 2 3 4 5 6 7 8 9 *** * * * ***** - - - ---------- 显示效果如下所示：\n删除线 如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n1 2 GOOGLE.COM ~~BAIDU.COM~~ 显示效果如下所示：\nGOOGLE.COM\nBAIDU.COM\n下划线 下划线可以通过 HTML 的 标签来实现：\n1 \u0026lt;u\u0026gt;带下划线文本\u0026lt;/u\u0026gt; 显示效果如下所示：\n带下划线文本\n脚注 脚注是对文本的补充说明。\nMarkdown 脚注的格式如下:\n1 [^要注明的文本] 以下实例演示了脚注的用法：\n1 2 3 创建脚注格式类似这样 [^Mtpd]。 [^Mtpd]: 薄荷布丁：好耶！ 演示效果如下：\n创建脚注格式类似这样 1。\nMarkdown 列表 Markdown 支持有序列表和无序列表。\n无序列表使用星号( * )、加号( + )或是减号( - )作为列表标记，这些标记后面要添加一个空格，然后再填写内容：\n1 2 3 4 5 6 7 8 9 10 11 12 * 第一项 * 第二项 * 第三项 + 第一项 + 第二项 + 第三项 - 第一项 - 第二项 - 第三项 显示结果如下：\n第一项 第二项 第三项 第一项 第二项 第三项 第一项\n第二项\n第三项\n有序列表使用数字并加上 . 号来表示，如：\n1 2 3 1. 第一项 2. 第二项 3. 第三项 显示结果如下：\n第一项\n第二项\n第三项\n列表嵌套 列表嵌套只需在子列表中的选项前面添加四个空格即可：\n1 2 3 4 5 6 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素 2. 第二项： - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 显示结果如下：\n第一项： 第一项嵌套的第一个元素 第一项嵌套的第二个元素 第二项： 第二项嵌套的第一个元素 第二项嵌套的第二个元素 Markdown 区块 Markdown 区块引用是在段落开头使用 \u0026gt; 符号 ，然后后面紧跟一个空格符号：\n1 2 3 \u0026gt; 薄荷布丁 \u0026gt; 好耶 \u0026gt; Foo 显示结果如下：\n薄荷布丁\n好耶\nFoo\n另外区块是可以嵌套的，一个 \u0026gt; 符号是最外层，两个 \u0026gt; 符号是第一层嵌套，以此类推：\n1 2 3 \u0026gt; 最外层 \u0026gt; \u0026gt; 第一层嵌套 \u0026gt; \u0026gt; \u0026gt; 第二层嵌套 显示结果如下：\n最外层\n第一层嵌套\n第二层嵌套\n区块中使用列表 区块中使用列表实例如下：\n1 2 3 4 5 6 \u0026gt; 区块中使用列表 \u0026gt; 1. 第一项 \u0026gt; 2. 第二项 \u0026gt; + 第一项 \u0026gt; + 第二项 \u0026gt; + 第三项 显示结果如下：\n区块中使用列表\n第一项 第二项 第一项 第二项 第三项 列表中使用区块 如果要在列表项目内放进区块，那么就需要在 \u0026gt; 前添加四个空格的缩进。\n列表中使用区块实例如下：\n1 2 3 4 * 第一项 \u0026gt; 菜鸟教程 \u0026gt; 学的不仅是技术更是梦想 * 第二项 显示结果如下：\n第一项 菜鸟教程 学的不仅是技术更是梦想\n第二项 Markdown 代码 如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：\n1 `printf()` 函数 显示结果如下：\nprintf() 函数\n代码区块 代码区块使用 4 个空格或者一个制表符（Tab 键）。\n实例如下：\n1 2 3 \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;foo\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; 你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：\n1 2 3 4 5 ​```javascript $(document).ready(function () { alert(\u0026#39;Mtpd\u0026#39;); }); ​``` 显示结果如下：\n1 2 3 $(document).ready(function () { alert(\u0026#39;Mtpd\u0026#39;); }); Markdown 链接 链接使用方法如下：\n1 2 3 4 5 [链接名称](链接地址) 或者 \u0026lt;链接地址\u0026gt; 例如：\n1 这是一个链接 [例子](http://exmaple.com/) 显示结果如下：\n这是一个链接 例子\n直接使用链接地址：\n1 \u0026lt;http://exmaple.com/\u0026gt; 显示结果如下：\nhttp://exmaple.com/\n高级链接 我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：\n1 2 3 4 5 6 这个链接用 1 作为网址变量 [Google][1] 这个链接用 Mtpd 作为网址变量 [Mtpd][Mtpd] 然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [Mtpd]: http://exmaple.com/ 显示结果如下：\n这个链接用 1 作为网址变量 Google\n这个链接用 Mtpd 作为网址变量 Mtpd\nMarkdown 图片 Markdown 图片语法格式如下：\n1 2 3 ![alt 属性文本](图片地址) ![alt 属性文本](图片地址 \u0026#34;可选标题\u0026#34;) 开头一个感叹号 ! 接着一个方括号，里面放上图片的替代文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 \u0026rsquo;title\u0026rsquo; 属性的文字。 使用实例：\n1 2 3 ![百度 图标](https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png) ![百度 图标](https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png \u0026#34;百度\u0026#34;) 显示结果如下：\n当然，你也可以像网址那样对图片网址使用变量:\n1 2 3 4 这个链接用 2 作为网址变量 ![Baidu][2]. 然后在文档的结尾为变量赋值（网址） [2]: https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png 显示结果如下：\n这个链接用 2 作为网址变量 .\nMarkdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 标签。\n1 \u0026lt;img src=\u0026#34;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png\u0026#34; width=\u0026#34;50%\u0026#34;\u0026gt; 显示结果如下：\nMarkdown 表格 Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。\n语法格式如下：\n1 2 3 4 | 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 | 以上代码显示结果如下：\n表头 表头 单元格 单元格 单元格 单元格 对齐方式 我们可以设置表格的对齐方式：\n-: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例如下：\n1 2 3 4 | 左对齐 | 右对齐 | 居中对齐 | | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 以上代码显示结果如下：\n左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 Markdown 高级技巧 支持的 HTML 元素 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n目前支持的 HTML 元素有：\u0026lt;kbd\u0026gt; \u0026lt;b\u0026gt; \u0026lt;i\u0026gt; \u0026lt;em\u0026gt; \u0026lt;sup\u0026gt; \u0026lt;sub\u0026gt; \u0026lt;br\u0026gt;等 ，如：\n1 使用 \u0026lt;kbd\u0026gt;Ctrl\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Alt\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Del\u0026lt;/kbd\u0026gt; 重启电脑 输出结果为：\n使用 Ctrl+Alt+Del 重启电脑\n转义 Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n1 2 **文本加粗** \\*\\* 正常显示星号 \\*\\* 输出结果为：\n文本加粗\n** 正常显示星号 **\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n1 2 3 4 5 6 7 8 9 10 11 12 \\ 反斜线 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 小括号 # 井字号 + 加号 - 减号 . 英文句点 ! 感叹号 公式 当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n1 2 3 4 5 6 7 8 $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\\ \\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\\ \\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\\ \\end{vmatrix} ${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}} $$ 输出结果为： $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\ \\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\ \\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\ \\end{vmatrix} ${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}} $$\n薄荷布丁：好耶！\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2021-04-09T00:00:00Z","image":"https://skae.top/p/md-tutorial/md_hu04a4cee4a602227a3dbc4240125a81d6_24442_120x120_fill_box_smart1_3.png","permalink":"https://skae.top/p/md-tutorial/","title":"Markdown语法教程"},{"content":"参考资料 主题： https://github.com/CaiJimmy/hugo-theme-stack\n主题官方文档： https://docs.stack.jimmycai.com/v/zh-cn/\n安装主题后，启动一个临时服务器（不要正式使用）\n$ hugo server \u0026ndash;theme=hugo-theme-stack\n解决无法启动问题（删除根目录config.toml即可）： https://github.com/CaiJimmy/hugo-theme-stack/issues/105\nhugo server启动模式（改端口什么的）： https://www.jianshu.com/p/2c6aa941f657\n辅助资料 官方中文文档： https://www.gohugo.org/\n参考末尾\u0026quot;在站点根目录执行 $ hugo 命令生成最终页面，所有静态页面都会生成到 public 目录\u0026quot;\n完全使用过程： https://zhuanlan.zhihu.com/p/126298572\n重点参考\u0026quot;2.Hugo 安装\u0026quot;\u0026ldquo;7.编写博客文章\u0026rdquo;\n备用资料 标题：\u0026ldquo;通过 Hugo+Nginx 部署静态网页\u0026rdquo;： https://blog.csdn.net/Homography/article/details/106168190\n完全使用过程： https://www.jianshu.com/p/f1b02e00f206\nmarkdown教程： https://www.runoob.com/markdown/md-tutorial.html\n","date":"2021-04-04T00:00:00Z","permalink":"https://skae.top/p/create-hugo/","title":"Hugo搭建参考资料"},{"content":"网址：https://teracloud.jp/en/\n有点卡所以要多等一会\n注册填写邀请码【WN8WP】可以多得5G空间\nwebdav地址：https://ena.teracloud.jp/dav/\n账号是你的User ID\n密码是你的Password\n可以被挂载到“此电脑”中\n服务器在国外所以体验不是很棒\n","date":"2021-02-14T00:00:00Z","image":"https://skae.top/p/teracloud/logo2.svg","permalink":"https://skae.top/p/teracloud/","title":"TeraCLOUD网盘，免费10G，支持webdav"},{"content":"16x PvP Pack: Henry\u0026rsquo;s 1.14Default Edit: https://lanzous.com/ic8y4pi\nEmma\u0026rsquo;s Default edit: https://lanzous.com/ibjrbxg\nidyl 16x: https://lanzous.com/ib9o06f\nSpirit 16x:\nSnowfault 16x: https://11yearsold.lanzous.com/ieMXtjpya3g\nMurphfault: https://vape.lanzoux.com/inxBnifal3c\n32x PvP Pack: Faithful 32x:\naurA short swords: https://ww.lanzous.com/iccawhi\nZOVA 16K: https://youran233.lanzous.com/igJaye2knaj\n32x OCN short swords: https://www.lanzoux.com/iD99Qh84ead\n32^2 OCN Edit: https://wwe.lanzous.com/iuq1ci6t8bc\nVene 32x Revamp: https://wwe.lanzous.com/iZUkji6t8vc\nDragonfruit 32x: https://wwe.lanzous.com/ifdHLi6t7yj\nBlizzard Pack 32x: https://wwe.lanzous.com/i3PLki6t9da\nEpax 40k: https://wwe.lanzous.com/i3PLki6t9da\n!Dynamic Duo: https://www.lanzoux.com/iT5UMgk5hdg\nRKY 32x:\nSprint 32x:\nPot PVP Pack： 無限: https://wwe.lanzous.com/iWVSci6tafi\nVene 32x Revamp: https://wwe.lanzous.com/iZUkji6t8vc\n!Dynamic Duo: https://www.lanzoux.com/iT5UMgk5hdg\np4nda faithful: https://www.lanzoux.com/ikD48gk7tda\nDragonfruit 32x: https://wwe.lanzous.com/ifdHLi6t7yj\nBlizzard Pack 32x: https://wwe.lanzous.com/i3PLki6t9da\n","date":"2020-11-27T00:00:00Z","permalink":"https://skae.top/p/jepvp/","title":"Java版PVP材质包"},{"content":"黑卡获取教程： 我们先打开浏览器~\n第一步，在浏览器里安装谷歌访问助手插件，打开官网 ggfwzs.com，在\u0026quot;在线安装2.1.9\u0026quot;点击你的浏览器，提示激活不用管【如果没有此插件后面几步将无法进行】\n上面解决方案不可用，目前另外的可用解决方案： https://googlehelper.net/\n第二步，打开FreeAlts.pw\n第三步，点击Minecraft Account\n第四步，点击GENERATE\n第五步，弹出新网页后点击Click here to continue 【可能会有广告】\n第六步，等待几秒后点击Get Link 【可能有广告】\n第七步，重复前面的第五步、第六步\n第八步，进行人机验证\n第九步，再次点击GENERATE\n之后就可以获取黑卡了~ 冒号前面的是账号，后面是密码~\n右边的小按钮是复制，如果黑卡暴毙可再次点击GENERATE重复之前的操作~\n视频教程： https://www.bilibili.com/video/av46367236\n","date":"2020-11-21T00:00:00Z","permalink":"https://skae.top/p/mc-combo/","title":"Minecraft 黑卡获取教程"}]